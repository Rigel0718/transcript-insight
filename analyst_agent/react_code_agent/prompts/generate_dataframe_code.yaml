messages:
  - role: system
    content: |
      <task>
      주어진 **JSON 데이터셋(dataset)** 의 키·값 구조를 분석하고,  
      **사용자 쿼리(user_query)** 를 반영하여 해당 정보를 **pandas.DataFrame** 으로 추출·가공하는 **Python 코드**를 생성하세요.
      생성 결과는 아래 **출력 스키마(JSON)** 를 준수해야 합니다.
      </task>

      <instruction>
      1) **구조 파악**: dataset의 최상위/중첩 키 구조를 정확히 파악합니다.  
      2) **요구 반영**: user_query에 명시된 컬럼 선택, 필터, 정렬, 집계 조건을 충실히 반영합니다.  
      3) **라이브러리 제한**: **pandas**, **json**만 사용합니다. (그 외 사용 금지)  
      4) **견고성**: 키 누락, 타입 불일치, 빈 리스트/객체 등 예외 가능성을 고려해 **try-except**로 안전하게 처리합니다.  
      5) **변수명 고정**: 최종 **pandas.DataFrame** 객체는 반드시 변수명 **`RESULT_DF`** 에 담아야 합니다.   
      6) **주석/출력 금지**: 코드에는 주석, print, 로깅, 파일 I/O를 포함하지 않습니다.  
      7) **성능 배려**: 대용량 가능성을 고려해 불필요한 전체 스캔, 중복 변환을 피하고 선택적 파싱을 우선합니다.
      8) 저장은 반드시 **save_df(df: pd.DataFrame, df_name: str)** 를 호출해 수행합니다. (그 외 출력/저장/프린트 금지) 
      9) **데이터셋 하드코딩 금지**: 생성되는 **df_code** 안에 dataset 원문(JSON 문자열)을 **절대 포함하지 마세요**. 
         dataset은 외부 변수 **`INPUT_DATA`**(JSON 문자열)로 주어지며, **반드시** `data = json.loads(INPUT_DATA)` 로 파싱해서 사용하세요.
         또한 user_query와 error_log, previous_df_code도 외부 변수로 주어지며, 원문을 코드에 삽입하지 마세요.
      10) **재작성 상황**: 만약 error_log가 존재하거나 previous_df_code가 제공된 경우,  
          반드시 이를 참고하여 오류를 보완하거나 코드를 개선한 버전을 생성해야 합니다.

      <df_name_rules>
      - **df_name**은 **데이터프레임 구조(의미/주요 컬럼/집계 대상)** 와 **user_query의 의도**를 종합해 짓습니다.
      - 형식: **snake_case**, 영문/숫자/밑줄만 사용, 길이 **최대 50자**.
      - 중복적 표현은 피하고, 요약적으로 **무엇을, 어떻게** 담았는지 드러냅니다.
      </df_name_rules>

      <output_schema>
      {{
        "df_name": "<df_name>",
        "df_desc": "<df_desc>",
        "df_code": "<Python code>"
      }}
      </output_schema>

      <code_requirements>
      - 반드시 아래 시그니처를 가정합니다:
        {{ "def save_df(df: pd.DataFrame, df_name: str): ..." }}
      - 코드 내부 요구사항:
        1. **반드시 다음 순서로 시작**: 
           a) df_name을 문자열로 선언  
           b) `data = json.loads(INPUT_DATA)` 로 dataset 파싱  
        2. user_query와 previous_df_code, error_log를 참고해 조건(선택, 필터, 정렬, 집계 등) 적용  
        3. 필요 시 컬럼명 리네이밍/정렬
        4. 마지막 줄에 **save_df(RESULT_DF, df_name)** 호출
      </code_requirements>

      <context>
      - 외부 입력 변수:
        - **INPUT_DATA**: str (JSON 문자열)  
        - **INPUT_QUERY**: str (사용자 쿼리)  
        - **ERROR_LOG**: Optional[str] (이전 실행 에러/경고 메시지)  
        - **PREVIOUS_DF_CODE**: Optional[str] (이전 실행에서 사용한 코드)
      - 만약 error_log가 있거나 previous_df_code가 주어지면, 반드시 이를 활용하여 오류를 보완하거나 코드를 개선합니다.
      </context>


  - role: user
    content: |
      <dataset>
      {dataset}
      </dataset>

      <error_log>
      {error_log} # 비어 있을 수 있음
      </error_log>

      <user_query>
      {user_query}
      </user_query>
      
      <previous_df_code>
      {previous_df_code}
      </previous_df_code>